<HTML>
<HEAD>
<TITLE>
</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<FONT SIZE=-1><A HREF="contents.htm">Table of Contents</A> | <A HREF="history.htm">Previous</A>
 | <A HREF="java.htm">Next</A>
 | <A HREF="bklast.htm">Index</A>
</FONT><BR><BR>
<HR>

<H1><A NAME="Image"></A>
<A NAME="1193137">
 Image
</A></H1>
<A NAME="1193147">
An image on an HTML form.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193140">
<I>Client-side object</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193142">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193144">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193146">
JavaScript 1.1</A></P><P><A NAME="1194252">
</A></P><P><A NAME="1194253">
JavaScript 1.2: added <CODE>handleEvent</CODE> method</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193148">
 Created by
</A></H4>

<A NAME="1193151">
The <CODE>Image</CODE> constructor or the <CODE><A HREF="http://developer.netscape.com/docs/manuals/htmlguid/index.htm?content=tags8.htm#tags:IMG" TARGET="_top">IMG</A></CODE> tag.</A></P>
<A NAME="1193152">
The JavaScript runtime engine creates an <CODE>Image</CODE> object corresponding to each <CODE>IMG</CODE> tag in your document. It puts these objects in an array in the <A HREF="document.htm#1226315"><CODE>document.images</CODE></A> property. You access an <CODE>Image</CODE> object by indexing this array.</A></P>
<A NAME="1193156">
To define an image with the <CODE>IMG</CODE> tag, use standard HTML syntax with the addition of JavaScript event handlers. If specify a value for the <CODE>NAME</CODE> attribute, you can use that name when indexing the <CODE>images</CODE> array.</A></P>
<A NAME="1193157">
To define an image with its constructor, use the following syntax:</A></P>
<PRE><A NAME="1193158">new Image([<I>width</I>,] [<I>height</I>])</A></PRE>
<H4><A NAME="Head3;"></A>
<A NAME="1193159">
 Parameters
</A></H4>

<A NAME="1193169">
<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193162">width</A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193164">
The image width, in pixels.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193166">height</A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193168">
The image height, in pixels.</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193170">
 Event handlers
</A></H4>

<ul><LI><A NAME="1193174">
<A HREF="handlers.htm#1119616"><CODE>onAbort</CODE></A>
</A></LI><LI><A NAME="1193178">
<A HREF="handlers.htm#1120097"><CODE>onError</CODE></A>
</A></LI><LI><A NAME="1193182">
<A HREF="handlers.htm#1120313"><CODE>onKeyDown</CODE></A>
</A></LI><LI><A NAME="1193186">
<A HREF="handlers.htm#1120393"><CODE>onKeyPress</CODE></A>
</A></LI><LI><A NAME="1193190">
<A HREF="handlers.htm#1120473"><CODE>onKeyUp</CODE></A>
</A></LI><LI><A NAME="1193194">
<A HREF="handlers.htm#1120545"><CODE>onLoad</CODE></A>
</A></LI></ul><A NAME="1193195">
To define an event handler for an <CODE>Image</CODE> object created with the <CODE>Image</CODE> constructor, set the appropriate property of the object. For example, if you have an <CODE>Image</CODE> object named <CODE>imageName</CODE> and you want to set one of its event handlers to a function whose name is <CODE>handlerFunction</CODE>, use one of the following statements:</A></P>
<PRE><A NAME="1193196">imageName.onabort = handlerFunction<br>imageName.onerror = handlerFunction<br>imageName.onkeydown = handlerFunction<br>imageName.onkeypress = handlerFunction<br>imageName.onkeyup = handlerFunction<br>imageName.onload = handlerFunction</A></PRE><A NAME="1193197">
<CODE>Image</CODE> objects do not have <CODE>onClick</CODE>, <CODE>onMouseOut</CODE>, and <CODE>onMouseOver</CODE> event handlers. However, if you define an <CODE>Area</CODE> object for the image or place the <CODE>IMG</CODE> tag within a <CODE>Link</CODE> object, you can use the <CODE>Area</CODE> or <CODE>Link</CODE> object's event handlers. See <A HREF="link.htm#1193137"><CODE>Link</CODE></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193201">
 Description
</A></H4>

<A NAME="1193203">
The position and size of an image in a document are set when the document is displayed in the web browser and cannot be changed using JavaScript (the <CODE>width</CODE> and <CODE>height</CODE> properties are read-only for these objects). You can change which image is displayed by setting the <CODE>src</CODE> and <CODE>lowsrc</CODE> properties. (See the descriptions of <A HREF="image.htm#1193604"><CODE>Image.src</CODE></A> and <A HREF="image.htm#1193521"><CODE>Image.lowsrc</CODE></A>.)</A></P>
<A NAME="1193211">
You can use JavaScript to create an animation with an <CODE>Image</CODE> object by repeatedly setting the <CODE>src</CODE> property, as shown in Example 4 below. JavaScript animation is slower than GIF animation, because with GIF animation the entire animation is in one file; with JavaScript animation, each frame is in a separate file, and each file must be loaded across the network (host contacted and data transferred).</A></P>
<A NAME="1193213">
The primary use for an <CODE>Image</CODE> object created with the <CODE>Image</CODE> constructor is to load an image from the network (and decode it) before it is actually needed for display. Then when you need to display the image within an existing image cell, you can set the <CODE>src</CODE> property of the displayed image to the same value as that used for the previously fetched image, as follows.</A></P>
<PRE><A NAME="1193214">myImage = new Image()<br>myImage.src = "seaotter.gif"<br>...<br>document.images[0].src = myImage.src</A></PRE><A NAME="1193215">
The resulting image will be obtained from cache, rather than loaded over the network, assuming that sufficient time has elapsed to load and decode the entire image. You can use this technique to create smooth animations, or you could display one of several images based on form input.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193216">
 Property Summary
</A></H4>

<A NAME="1193292">
<P><B></B>
<TABLE BORDER="2" CELLPADDING=5>
<TR><TH VALIGN=baseline ALIGN=left><B><A NAME="1193219">
<B>Property
</B></A><B><TH VALIGN=baseline ALIGN=left><B><A NAME="1193221">
<B>Description
</B></A><B>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193226"><A HREF="image.htm#1193369"><CODE>border</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193228">
Reflects the <CODE>BORDER</CODE> attribute.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193233"><A HREF="image.htm#1193409"><CODE>complete</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193235">
Boolean value indicating whether the web browser has completed its attempt to load the image.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193240"><A HREF="image.htm#1193441"><CODE>height</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193242">
Reflects the <CODE>HEIGHT</CODE> attribute.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193247"><A HREF="image.htm#1193480"><CODE>hspace</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193249">
Reflects the <CODE>HSPACE</CODE> attribute.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193254"><A HREF="image.htm#1193521"><CODE>lowsrc</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193256">
Reflects the <CODE>LOWSRC</CODE> attribute.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193261"><A HREF="image.htm#1193552"><CODE>name</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193263">
Reflects the <CODE>NAME</CODE> attribute.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193275"><A HREF="image.htm#1193604"><CODE>src</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193277">
Reflects the <CODE>SRC</CODE> attribute.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193282"><A HREF="image.htm#1193640"><CODE>vspace</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193284">
Reflects the <CODE>VSPACE</CODE> attribute.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193289"><A HREF="image.htm#1193681"><CODE>width</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193291">
Reflects the <CODE>WIDTH</CODE> attribute.</A></P>

</TABLE>
<TABLE>
<TR><TD>
</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193293">
 Method Summary
</A></H4>

<A NAME="1193306">
<P><B></B>
<TABLE BORDER="2" CELLPADDING=5>
<TR><TH VALIGN=baseline ALIGN=left><B><A NAME="1193296">
<B>Method
</B></A><B><TH VALIGN=baseline ALIGN=left><B><A NAME="1193298">
<B>Description
</B></A><B>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193303"><A HREF="image.htm#1193940"><CODE>handleEvent</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193305">
Invokes the handler for the specified event.</A></P>

</TABLE>
<TABLE>
<TR><TD>
</TABLE>
</A></P>
<A NAME="1195828">
In addition, this object inherits the <A HREF="object.htm#1193628"><CODE>watch</CODE></A> and <A HREF="object.htm#1193499"><CODE>unwatch</CODE></A> methods from <A HREF="object.htm#1193136"><CODE>Object</CODE></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193307">
 Examples
</A></H4>

<A NAME="1193308">
<B>Example 1: Create an image with the</B> <CODE>IMG</CODE><B> tag.</B> The following code defines an image using the <CODE>IMG</CODE> tag:</A></P>
<PRE><A NAME="1193309">&lt;IMG NAME="aircraft" SRC="f15e.gif" ALIGN="left" VSPACE="10"&gt;</A></PRE><A NAME="1193310">
The following code refers to the image:</A></P>
<PRE><A NAME="1193311">document.aircraft.src='f15e.gif'</A></PRE><A NAME="1193312">
When you refer to an image by its name, you must include the form name if the image is on a form. The following code refers to the image if it is on a form:</A></P>
<PRE><A NAME="1193313">document.myForm.aircraft.src='f15e.gif'</A></PRE><A NAME="1193314">
<B>Example 2: Create an image with the Image constructor.</B> The following example creates an <CODE>Image</CODE> object, <CODE>myImage</CODE>, that is 70 pixels wide and 50 pixels high. If the source URL, <CODE>seaotter.gif</CODE>, does not have dimensions of 70x50 pixels, it is scaled to that size.</A></P>
<PRE><A NAME="1193315">myImage = new Image(70, 50)<br>myImage.src = "seaotter.gif"</A></PRE><A NAME="1193316">
If you omit the width and height arguments from the <CODE>Image</CODE> constructor, <CODE>myImage</CODE> is created with dimensions equal to that of the image named in the source URL.</A></P>
<PRE><A NAME="1193317">myImage = new Image()<br>myImage.src = "seaotter.gif"</A></PRE><A NAME="1193318">
<B>Example 3: Display an image based on form input.</B> In the following example, the user selects which image is displayed. The user orders a shirt by filling out a form. The image displayed depends on the shirt color and size that the user chooses. All possible image choices are preloaded to speed response time. When the user clicks the button to order the shirt, the <CODE>allShirts</CODE> function displays the images of all the shirts.</A></P>
<PRE><A NAME="1193319">&lt;SCRIPT&gt;<br>shirts = new Array()<br>shirts[0] = "R-S"<br>shirts[1] = "R-M"<br>shirts[2] = "R-L"<br>shirts[3] = "W-S"<br>shirts[4] = "W-M"<br>shirts[5] = "W-L"<br>shirts[6] = "B-S"<br>shirts[7] = "B-M"<br>shirts[8] = "B-L"</A></PRE><PRE><A NAME="1193320">doneThis = 0<br>shirtImg = new Array()</A></PRE><PRE><A NAME="1193321">// Preload shirt images<br>for(idx=0; idx &lt; 9; idx++) {<br>&nbsp;&nbsp;&nbsp;shirtImg[idx] = new Image()<br>&nbsp;&nbsp;&nbsp;shirtImg[idx].src = "shirt-" + shirts[idx] + ".gif"<br>}</A></PRE><PRE><A NAME="1193322">function changeShirt(form)<br>{<br>&nbsp;&nbsp;&nbsp;shirtColor = form.color.options[form.color.selectedIndex].text<br>&nbsp;&nbsp;&nbsp;shirtSize = form.size.options[form.size.selectedIndex].text</A></PRE><PRE><A NAME="1193323">&nbsp;&nbsp;&nbsp;newSrc = "shirt-" + shirtColor.charAt(0) + "-" + shirtSize.charAt(0) + ".gif"<br>&nbsp;&nbsp;&nbsp;document.shirt.src = newSrc<br>}</A></PRE><PRE><A NAME="1193324">function allShirts()<br>{<br>&nbsp;&nbsp;&nbsp;document.shirt.src = shirtImg[doneThis].src<br>&nbsp;&nbsp;&nbsp;doneThis++<br>&nbsp;&nbsp;&nbsp;if(doneThis != 9)setTimeout("allShirts()", 500)<br>&nbsp;&nbsp;&nbsp;else doneThis = 0</A></PRE><PRE><A NAME="1193325">&nbsp;&nbsp;&nbsp;return<br>}</A></PRE><PRE><A NAME="1193326">&lt;/SCRIPT&gt;</A></PRE><PRE><A NAME="1193327">&lt;FONT SIZE=+2&gt;&lt;B&gt;Netscape Polo Shirts!&lt;/FONT&gt;&lt;/B&gt;</A></PRE><PRE><A NAME="1193328">&lt;TABLE CELLSPACING=20 BORDER=0&gt;<br>&lt;TR&gt;<br>&lt;TD&gt;&lt;IMG name="shirt" SRC="shirt-W-L.gif"&gt;&lt;/TD&gt;</A></PRE><PRE><A NAME="1193329">&lt;TD&gt;<br>&lt;FORM&gt;<br>&lt;B&gt;Color&lt;/B&gt;<br>&lt;SELECT SIZE=3 NAME="color" onChange="changeShirt(this.form)"&gt;<br>&lt;OPTION&gt; Red<br>&lt;OPTION SELECTED&gt; White<br>&lt;OPTION&gt; Blue<br>&lt;/SELECT&gt;</A></PRE><PRE><A NAME="1193330">&lt;P&gt;<br>&lt;B&gt;Size&lt;/B&gt;<br>&lt;SELECT SIZE=3 NAME="size" onChange="changeShirt(this.form)"&gt;<br>&lt;OPTION&gt; Small<br>&lt;OPTION&gt; Medium<br>&lt;OPTION SELECTED&gt; Large<br>&lt;/SELECT&gt;</A></PRE><PRE><A NAME="1193331">&lt;P&gt;&lt;INPUT type="button" name="buy" value="Buy This Shirt!"<br>&nbsp;&nbsp;&nbsp;onClick="allShirts()"&gt;<br>&lt;/FORM&gt;</A></PRE><PRE><A NAME="1193332">&lt;/TD&gt;<br>&lt;/TR&gt;<br>&lt;/TABLE&gt;</A></PRE><A NAME="1193333">
<B>Example 4: JavaScript animation.</B> The following example uses JavaScript to create an animation with an <CODE>Image</CODE> object by repeatedly changing the value the <CODE>src</CODE> property. The script begins by preloading the 10 images that make up the animation (<CODE>image1.gif</CODE>, <CODE>image2.gif</CODE>, <CODE>image3.gif</CODE>, and so on). When the <CODE>Image</CODE> object is placed on the document with the <CODE>IMG</CODE> tag, <CODE>image1.gif</CODE> is displayed and the <CODE>onLoad</CODE> event handler starts the animation by calling the <CODE>animate</CODE> function. Notice that the <CODE>animate</CODE> function does not call itself after changing the <CODE>src</CODE> property of the <CODE>Image</CODE> object. This is because when the <CODE>src</CODE> property changes, the image's <CODE>onLoad</CODE> event handler is triggered and the <CODE>animate</CODE> function is called.</A></P>
<PRE><A NAME="1193334">&lt;SCRIPT&gt;<br>delay = 100<br>imageNum = 1</A></PRE><PRE><A NAME="1193335">// Preload animation images<br>theImages = new Array()<br>for(i = 1; i &lt; 11; i++) {<br>&nbsp;&nbsp;&nbsp;theImages[i] = new Image()<br>&nbsp;&nbsp;&nbsp;theImages[i].src = "image" + i + ".gif"<br>}</A></PRE><PRE><A NAME="1193336">function animate() {<br>&nbsp;&nbsp;&nbsp;document.animation.src = theImages[imageNum].src<br>&nbsp;&nbsp;&nbsp;imageNum++<br>&nbsp;&nbsp;&nbsp;if(imageNum &gt; 10) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;imageNum = 1<br>&nbsp;&nbsp;&nbsp;}<br>}</A></PRE><PRE><A NAME="1193337">function slower() {<br>&nbsp;&nbsp;&nbsp;delay+=10<br>&nbsp;&nbsp;&nbsp;if(delay &gt; 4000) delay = 4000<br>}</A></PRE><PRE><A NAME="1193338">function faster() {<br>&nbsp;&nbsp;&nbsp;delay-=10<br>&nbsp;&nbsp;&nbsp;if(delay &lt; 0) delay = 0<br>}<br>&lt;/SCRIPT&gt;</A></PRE><PRE><A NAME="1193339">&lt;BODY BGCOLOR="white"&gt;</A></PRE><PRE><A NAME="1193340">&lt;IMG NAME="animation" SRC="image1.gif" ALT="[Animation]"<br>&nbsp;&nbsp;&nbsp;onLoad="setTimeout('animate()', delay)"&gt;</A></PRE><PRE><A NAME="1193341">&lt;FORM&gt;<br>&nbsp;&nbsp;&nbsp;&lt;INPUT TYPE="button" Value="Slower" onClick="slower()"&gt;<br>&nbsp;&nbsp;&nbsp;&lt;INPUT TYPE="button" Value="Faster" onClick="faster()"&gt;<br>&lt;/FORM&gt;<br>&lt;/BODY&gt;</A></PRE><A NAME="1193351">
See also the examples for the <A HREF="handlers.htm#1119616"><CODE>onAbort</CODE></A>, <A HREF="handlers.htm#1120097"><CODE>onError</CODE></A>, and <A HREF="handlers.htm#1120545"><CODE>onLoad</CODE></A> event handlers.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193352">
 See also
</A></H4>

<A NAME="1193365">
<A HREF="link.htm#1193137"><CODE>Link</CODE></A>, <A HREF="handlers.htm#1119876"><CODE>onClick</CODE></A>, <A HREF="handlers.htm#1120757"><CODE>onMouseOut</CODE></A>, <A HREF="handlers.htm#1120822"><CODE>onMouseOver</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193369">
border
</A></H2>

<A NAME="1193387">
A string specifying the width, in pixels, of an image border.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193373">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193378">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193380">
<I>Read-only</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193382">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193384">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193386">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193388">
 Description
</A></H4>

<A NAME="1193389">
The <CODE>border</CODE> property reflects the <CODE>BORDER</CODE> attribute of the <CODE>IMG</CODE> tag. For images created with the <CODE>Image</CODE> constructor, the value of the <CODE>border</CODE> property is 0.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193390">
 Examples
</A></H4>

<A NAME="1193391">
The following function displays the value of an image's <CODE>border</CODE> property if the value is not 0.</A></P>
<PRE><A NAME="1193392">function checkBorder(theImage) {<br>&nbsp;&nbsp;&nbsp;if (theImage.border==0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;alert('The image has no border!')<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;else alert('The image's border is ' + theImage.border)<br>}</A></PRE>
<H4><A NAME="Head3;"></A>
<A NAME="1193393">
 See also
</A></H4>

<A NAME="1193406">
<A HREF="image.htm#1193441"><CODE>Image.height</CODE></A>, <A HREF="image.htm#1193480"><CODE>Image.hspace</CODE></A>, <A HREF="image.htm#1193640"><CODE>Image.vspace</CODE></A>, <A HREF="image.htm#1193681"><CODE>Image.width</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193409">
complete
</A></H2>

<A NAME="1193410">
A boolean value that indicates whether the web browser has completed its attempt to load an image.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193413">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193418">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193420">
<I>Read-only</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193422">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193424">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193426">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193427">
 Examples
</A></H4>

<A NAME="1193428">
The following example displays an image and three radio buttons. The user can click the radio buttons to choose which image is displayed. Clicking another button lets the user see the current value of the <CODE>complete</CODE> property.</A></P>
<PRE><A NAME="1193429">&lt;B&gt;Choose an image:&lt;/B&gt;<br>&lt;BR&gt;&lt;INPUT TYPE="radio" NAME="imageChoice" VALUE="image1" CHECKED<br>&nbsp;&nbsp;&nbsp;onClick="document.images[0].src='f15e.gif'"&gt;F-15 Eagle<br>&lt;BR&gt;&lt;INPUT TYPE="radio" NAME="imageChoice" VALUE="image2"<br>&nbsp;&nbsp;&nbsp;onClick="document.images[0].src='f15e2.gif'"&gt;F-15 Eagle 2<br>&lt;BR&gt;&lt;INPUT TYPE="radio" NAME="imageChoice" VALUE="image3"<br>&nbsp;&nbsp;&nbsp;onClick="document.images[0].src='ah64.gif'"&gt;AH-64 Apache</A></PRE><PRE><A NAME="1193430">&lt;BR&gt;&lt;INPUT TYPE="button" VALUE="Is the image completely loaded?"<br>&nbsp;&nbsp;&nbsp;onClick="alert('The value of the complete property is '<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;+ document.images[0].complete)"&gt;<br>&lt;BR&gt;<br>&lt;IMG NAME="aircraft" SRC="f15e.gif" ALIGN="left" VSPACE="10"&gt;&lt;BR&gt;</A></PRE>
<H4><A NAME="Head3;"></A>
<A NAME="1193431">
 See also
</A></H4>

<A NAME="1193438">
<A HREF="image.htm#1193521"><CODE>Image.lowsrc</CODE></A>, <A HREF="image.htm#1193604"><CODE>Image.src</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193940">
handleEvent
</A></H2>

<A NAME="1193953">
Invokes the handler for the specified event. <TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193943">
<I>Method of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193948">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193950">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193952">
JavaScript 1.2</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193954">
 Syntax
</A></H4>

<PRE><A NAME="1193955">handleEvent(<I>event</I>)</A></PRE>
<H4><A NAME="Head3;"></A>
<A NAME="1193956">
 Parameters
</A></H4>

<A NAME="1193962">
<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193959">event</A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193961">
The name of an event for which the specified object has an event handler.</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193963">
 Description
</A></H4>

<A NAME="1193966">
For information on handling events, see the <A HREF="http://developer.netscape.com/docs/manuals/js/client/jsguide/index.htm" TARGET="_top"><I>Client-Side JavaScript Guide</I></A>.</A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193441">
height
</A></H2>

<A NAME="1193458">
A string specifying the height of an image in pixels.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193444">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193449">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193451">
<I>Read-only</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193453">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193455">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193457">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193459">
 Description
</A></H4>

<A NAME="1193460">
The <CODE>height</CODE> property reflects the <CODE>HEIGHT</CODE> attribute of the <CODE>IMG</CODE> tag. For images created with the <CODE>Image</CODE> constructor, the value of the <CODE>height</CODE> property is the actual, not the displayed, height of the image.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193461">
 Examples
</A></H4>

<A NAME="1193462">
The following function displays the values of an image's <CODE>height</CODE>, <CODE>width</CODE>, <CODE>hspace</CODE>, and <CODE>vspace</CODE> properties.</A></P>
<PRE><A NAME="1193463">function showImageSize(theImage) {<br>&nbsp;&nbsp;&nbsp;alert('height=' + theImage.height+<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; width=' + theImage.width +<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; hspace=' + theImage.hspace +<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;'; vspace=' + theImage.vspace)<br>}</A></PRE>
<H4><A NAME="Head3;"></A>
<A NAME="1193464">
 See also
</A></H4>

<A NAME="1193477">
<A HREF="image.htm#1193369"><CODE>Image.border</CODE></A>, <A HREF="image.htm#1193480"><CODE>Image.hspace</CODE></A>, <A HREF="image.htm#1193640"><CODE>Image.vspace</CODE></A>, <A HREF="image.htm#1193681"><CODE>Image.width</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193480">
hspace
</A></H2>

<A NAME="1193481">
A string specifying a margin in pixels between the left and right edges of an image and the surrounding text.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193484">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193489">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193491">
<I>Read-only</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193493">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193495">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193497">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193498">
 Description
</A></H4>

<A NAME="1193499">
The <CODE>hspace</CODE> property reflects the <CODE>HSPACE</CODE> attribute of the <CODE>IMG</CODE> tag. For images created with the <CODE>Image</CODE> constructor, the value of the <CODE>hspace</CODE> property is 0.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193500">
 Examples
</A></H4>

<A NAME="1193504">
See the examples for the <A HREF="image.htm#1193441"><CODE>height</CODE></A> property.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193505">
 See also
</A></H4>

<A NAME="1193518">
<A HREF="image.htm#1193369"><CODE>Image.border</CODE></A>, <A HREF="image.htm#1193441"><CODE>Image.height</CODE></A>, <A HREF="image.htm#1193640"><CODE>Image.vspace</CODE></A>, <A HREF="image.htm#1193681"><CODE>Image.width</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193521">
lowsrc
</A></H2>

<A NAME="1193522">
A string specifying the URL of a low-resolution version of an image to be displayed in a document.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193525">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193530">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193532">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193534">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193535">
 Description
</A></H4>

<A NAME="1193536">
The <CODE>lowsrc</CODE> property initially reflects the <CODE>LOWSRC</CODE> attribute of the <CODE>IMG</CODE> tag. The web browser loads the smaller image specified by <CODE>lowsrc</CODE> and then replaces it with the larger image specified by the <CODE>src</CODE> property. You can change the <CODE>lowsrc</CODE> property at any time.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193537">
 Examples
</A></H4>

<A NAME="1193541">
See the examples for the <A HREF="image.htm#1193604"><CODE>src</CODE></A> property.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193542">
 See also
</A></H4>

<A NAME="1193549">
<A HREF="image.htm#1193409"><CODE>Image.complete</CODE></A>, <A HREF="image.htm#1193604"><CODE>Image.src</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193552">
name
</A></H2>

<A NAME="1193569">
A string specifying the name of an object.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193555">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193560">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193562">
<I>Read-only</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193564">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193566">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193568">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1194190">
 Security
</A></H4>

<B><A NAME="HeadRunIn;"></A>
<A NAME="1199496">
JavaScript 1.1. </A></B><A NAME="1194191">
This property is tainted by default. For information on data tainting, see the <A HREF="http://developer.netscape.com/docs/manuals/js/client/jsguide/index.htm" TARGET="_top"><I>Client-Side JavaScript Guide</I></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193575">
 Description
</A></H4>

<A NAME="1193576">
Represents the value of the <CODE>NAME</CODE> attribute. For images created with the <CODE>Image</CODE> constructor, the value of the <CODE>name</CODE> property is null.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193577">
 Examples
</A></H4>

<A NAME="1193578">
In the following example, the <CODE>valueGetter</CODE> function uses a <CODE>for</CODE> loop to iterate over the array of elements on the <CODE>valueTest</CODE> form. The <CODE>msgWindow</CODE> window displays the names of all the elements on the form:</A></P>
<PRE><A NAME="1193579">newWindow=window.open("http://home.netscape.com")</A></PRE><PRE><A NAME="1193580">function valueGetter() {<br>&nbsp;&nbsp;&nbsp;var msgWindow=window.open("")<br>&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; newWindow.document.valueTest.elements.length; i++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;msgWindow.document.write(newWindow.document.valueTest.elements[i].name + "&lt;BR&gt;")<br>&nbsp;&nbsp;&nbsp;}<br>}</A></PRE><A NAME="1193581">
In the following example, the first statement creates a window called <CODE>netscapeWin</CODE>. The second statement displays the value <CODE>"netscapeHomePage"</CODE> in the Alert dialog box, because <CODE>"netscapeHomePage"</CODE> is the value of the <CODE>windowName</CODE> argument of <CODE>netscapeWin</CODE>.</A></P>
<PRE><A NAME="1193582">netscapeWin=window.open("http://home.netscape.com","netscapeHomePage")<br>alert(netscapeWin.name)</A></PRE>
<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193604">
src
</A></H2>

<A NAME="1193617">
A string specifying the URL of an image to be displayed in a document. <TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193607">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193612">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193614">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193616">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193618">
 Description
</A></H4>

<A NAME="1193619">
The <CODE>src</CODE> property initially reflects the <CODE>SRC</CODE> attribute of the <CODE>IMG </CODE>tag. Setting the <CODE>src</CODE> property begins loading the new URL into the image area (and aborts the transfer of any image data that is already loading into the same area). Therefore, if you plan to alter the <CODE>lowsrc</CODE> property, you should do so before setting the <CODE>src</CODE> property. </A></P>
<A NAME="1193620">
If the URL in the <CODE>src</CODE> property refers to an image that is not the same size as the image cell it is loaded into, the source image is scaled to fit.</A></P>
<A NAME="1193621">
When you change the <CODE>src</CODE> property of a displayed image, the new image you specify is displayed in the area defined for the original image. For example, suppose an <CODE>Image</CODE> object originally displays the file <CODE>beluga.gif</CODE>:</A></P>
<PRE><A NAME="1193622">&lt;IMG NAME="myImage" SRC="beluga.gif" ALIGN="left"&gt;</A></PRE><A NAME="1193623">
If you set <CODE>myImage.src='seaotter.gif'</CODE>, the image <CODE>seaotter.gif</CODE> is scaled to fit in the same space originally used by <CODE>beluga.gif</CODE>, even if <CODE>seaotter.gif</CODE> is not the same size as <CODE>beluga.gif</CODE>.</A></P>
<A NAME="1193624">
You can change the <CODE>src</CODE> property at any time.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193625">
 Examples
</A></H4>

<A NAME="1193626">
The following example displays an image and three radio buttons. The user can click the radio buttons to choose which image is displayed. Each image also uses the <CODE>lowsrc</CODE> property to display a low-resolution image.</A></P>
<PRE><A NAME="1193627">&lt;SCRIPT&gt;<br>function displayImage(lowRes,highRes) {<br>&nbsp;&nbsp;&nbsp;document.images[0].lowsrc=lowRes<br>&nbsp;&nbsp;&nbsp;document.images[0].src=highRes<br>}<br>&lt;/SCRIPT&gt;</A></PRE><PRE><A NAME="1193628">&lt;FORM NAME="imageForm"&gt;<br>&lt;B&gt;Choose an image:&lt;/B&gt;<br>&lt;BR&gt;&lt;INPUT TYPE="radio" NAME="imageChoice" VALUE="image1" CHECKED<br>&nbsp;&nbsp;&nbsp;onClick="displayImage('f15el.gif','f15e.gif')"&gt;F-15 Eagle<br>&lt;BR&gt;&lt;INPUT TYPE="radio" NAME="imageChoice" VALUE="image2"<br>&nbsp;&nbsp;&nbsp;onClick="displayImage('f15e2l.gif','f15e2.gif')"&gt;F-15 Eagle 2<br>&lt;BR&gt;&lt;INPUT TYPE="radio" NAME="imageChoice" VALUE="image3"<br>&nbsp;&nbsp;&nbsp;onClick="displayImage('ah64l.gif','ah64.gif')"&gt;AH-64 Apache</A></PRE><PRE><A NAME="1193629">&lt;BR&gt;<br>&lt;IMG NAME="aircraft" SRC="f15e.gif" LOWSRC="f15el.gif" ALIGN="left" VSPACE="10"&gt;&lt;BR&gt;<br>&lt;/FORM&gt;</A></PRE>
<H4><A NAME="Head3;"></A>
<A NAME="1193630">
 See also
</A></H4>

<A NAME="1193637">
<A HREF="image.htm#1193409"><CODE>Image.complete</CODE></A>, <A HREF="image.htm#1193521"><CODE>Image.lowsrc</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193640">
vspace
</A></H2>

<A NAME="1193641">
A string specifying a margin in pixels between the top and bottom edges of an image and the surrounding text.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193644">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193649">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193651">
<I>Read-only</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193653">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193655">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193657">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193658">
 Description
</A></H4>

<A NAME="1193659">
The <CODE>vspace</CODE> property reflects the <CODE>VSPACE</CODE> attribute of the <CODE>IMG</CODE> tag. For images created with the <CODE>Image</CODE> constructor, the value of the <CODE>vspace</CODE> property is 0.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193660">
 Examples
</A></H4>

<A NAME="1193664">
See the examples for the <A HREF="image.htm#1193441"><CODE>height</CODE></A> property.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193665">
 See also
</A></H4>

<A NAME="1193678">
<A HREF="image.htm#1193369"><CODE>Image.border</CODE></A>, <A HREF="image.htm#1193441"><CODE>Image.height</CODE></A>, <A HREF="image.htm#1193480"><CODE>Image.hspace</CODE></A>, <A HREF="image.htm#1193681"><CODE>Image.width</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193681">
width
</A></H2>

<A NAME="1193698">
A string specifying the width of an image in pixels.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193684">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193689">
<A HREF="image.htm#1193137"><CODE>Image</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193691">
<I>Read-only</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193693">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193695">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193697">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193699">
 Description
</A></H4>

<A NAME="1193700">
The <CODE>width</CODE> property reflects the <CODE>WIDTH</CODE> attribute of the<CODE> IMG </CODE>tag. For images created with the <CODE>Image</CODE> constructor, the value of the <CODE>width</CODE> property is the actual, not the displayed, width of the image.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193701">
 Examples
</A></H4>

<A NAME="1193705">
See the examples for the <A HREF="image.htm#1193441"><CODE>height</CODE></A> property.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193706">
 See also
</A></H4>

<A NAME="1193719">
<A HREF="image.htm#1193369"><CODE>Image.border</CODE></A>, <A HREF="image.htm#1193441"><CODE>Image.height</CODE></A>, <A HREF="image.htm#1193480"><CODE>Image.hspace</CODE></A>, <A HREF="image.htm#1193640"><CODE>Image.vspace</CODE></A></A></P>

<HR>

<FONT SIZE=-1><A HREF="contents.htm">Table of Contents</A> | <A HREF="history.htm">Previous</A>
 | <A HREF="java.htm">Next</A>
 | <A HREF="bklast.htm">Index</A>
</FONT>
<P ALIGN=right>
<FONT SIZE=-2><I>Last Updated:  05/28/99  11:59:37</I></FONT>
<P> <CENTER>Copyright (c) 1999
<A HREF="http://home.netscape.com/misc/contact_info.html"
TARGET=_top>Netscape Communications Corporation</A></FONT>
</CENTER>
<P>
</BODY>
</HTML>


