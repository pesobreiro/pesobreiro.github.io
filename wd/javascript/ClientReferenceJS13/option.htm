<HTML>
<HEAD>
<TITLE>
</TITLE>
</HEAD>

<BODY BGCOLOR="#FFFFFF" TEXT="#000000">

<FONT SIZE=-1><A HREF="contents.htm">Table of Contents</A> | <A HREF="object.htm">Previous</A>
 | <A HREF="packages.htm">Next</A>
 | <A HREF="bklast.htm">Index</A>
</FONT><BR><BR>
<HR>

<H1><A NAME="Option"></A>
<A NAME="1193136">
 Option
</A></H1>
<A NAME="1193146">
An option in a selection list.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193139">
<I>Client-side object</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193141">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193143">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193145">
JavaScript 1.0</A></P><P><A NAME="1193746">
</A></P><P><A NAME="1193747">
JavaScript 1.1: added <CODE>defaultSelected</CODE> property; <CODE>text</CODE> property can be changed to change the text of an option</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193147">
 Created by
</A></H4>

<A NAME="1193150">
The <CODE>Option</CODE> constructor or the HTML <CODE><A HREF="http://developer.netscape.com/docs/manuals/htmlguid/index.htm?content=tags10.htm#tags:OPTION" TARGET="_top">OPTION</A></CODE> tag. To create an <CODE>Option</CODE> object with its constructor:</A></P>
<PRE><A NAME="1193151">new Option([<I>text</I>[, <I>value</I>[, <I>defaultSelected</I>[, <I>selected</I>]]]])</A></PRE><A NAME="1193152">
Once you've created an Option object, you can add it to a selection list using the <A HREF="select.htm#1193366"><CODE>Select.options</CODE></A> array.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193156">
 Parameters
</A></H4>

<A NAME="1193174">
<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193159">text</A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193161">
Specifies the text to display in the select list.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193163">value</A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193165">
Specifies a value that is returned to the server when the option is selected and the form is submitted.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193167">defaultSelected</A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193169">
Specifies whether the option is initially selected (true or false).</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193171">selected</A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193173">
Specifies the current selection state of the option (true or false).</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193175">
 Property Summary
</A></H4>

<A NAME="1193209">
<P><B></B>
<TABLE BORDER="2" CELLPADDING=5>
<TR><TH VALIGN=baseline ALIGN=left><B><A NAME="1193178">
<B>Property
</B></A><B><TH VALIGN=baseline ALIGN=left><B><A NAME="1193180">
<B>Description
</B></A><B>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193185"><A HREF="option.htm#1193270"><CODE>defaultSelected</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193187">
Specifies the initial selection state of the option</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1199047"><A HREF="option.htm#1197755"><CODE>index</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1199049">
The zero-based index of an element in the <A HREF="select.htm#1193366"><CODE>Select.options</CODE></A> array.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1199051"><A HREF="option.htm#1198741"><CODE>length</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1199053">
The number of elements in the <A HREF="select.htm#1193366"><CODE>Select.options</CODE></A> array.</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193192"><A HREF="option.htm#1197646"><CODE>selected</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193194">
Specifies the current selection state of the option</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193199"><A HREF="option.htm#1193380"><CODE>text</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193201">
Specifies the text for the option</A></P>
<TR><TD VALIGN=baseline ALIGN=left><PRE><A NAME="1193206"><A HREF="option.htm#1193419"><CODE>value</CODE></A></A></PRE><TD VALIGN=baseline ALIGN=left><P><A NAME="1193208">
Specifies the value that is returned to the server when the option is selected and the form is submitted</A></P>

</TABLE>
<TABLE>
<TR><TD>
</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1194717">
 Method Summary
</A></H4>

<A NAME="1194954">
This object inherits the <A HREF="object.htm#1193628"><CODE>watch</CODE></A> and <A HREF="object.htm#1193499"><CODE>unwatch</CODE></A> methods from <A HREF="object.htm#1193136"><CODE>Object</CODE></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193210">
 Description
</A></H4>

<A NAME="1193211">
Usually you work with <CODE>Option</CODE> objects in the context of a selection list (a <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object). When JavaScript creates a <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object for each <CODE><A HREF="http://developer.netscape.com/docs/manuals/htmlguid/index.htm?content=tags10.htm#tags:SELECT" TARGET="_top">SELECT</A></CODE> tag in the document, it creates <CODE>Option</CODE> objects for the <CODE><A HREF="http://developer.netscape.com/docs/manuals/htmlguid/index.htm?content=tags10.htm#tags:OPTION" TARGET="_top">OPTION</A></CODE> tags inside the <CODE>SELECT</CODE> tag and puts those objects in the <A HREF="select.htm#1193366"><CODE>options</CODE></A> array of the <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object. </A></P>
<A NAME="1193228">
In addition, you can create new options using the <CODE>Option</CODE> constructor and add those to a selection list. After you create an option and add it to the <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object, you must refresh the document by using <CODE>history.go(0)</CODE>. This statement must be last. When the document reloads, variables are lost if not saved in cookies or form element values.</A></P>
<A NAME="1193239">
You can use the <A HREF="option.htm#1197646"><CODE>Option.selected</CODE></A> and <A HREF="select.htm#1193420"><CODE>Select.selectedIndex</CODE></A> properties to change the selection state of an option.</A></P>
<ul><P><LI><A NAME="1193243">
The <A HREF="select.htm#1193420"><CODE>Select.selectedIndex</CODE></A> property is an integer specifying the index of the selected option. This is most useful for <CODE>Select</CODE> objects that are created without the <CODE>MULTIPLE</CODE> attribute. The following statement sets a <CODE>Select</CODE> object's <CODE>selectedIndex</CODE> property:</A></LI>
<P><A NAME="1193244">
<CODE>document.myForm.musicTypes.selectedIndex = i
</CODE></P></A>

<P><LI><A NAME="1193248">
The <A HREF="option.htm#1197646"><CODE>Option.selected</CODE></A> property is a Boolean value specifying the current selection state of the option in a <CODE>Select</CODE> object. If an option is selected, its <CODE>selected</CODE> property is true; otherwise it is false. This is more useful for <CODE>Select</CODE> objects that are created with the <CODE>MULTIPLE</CODE> attribute. The following statement sets an option's <CODE>selected</CODE> property to true:</A></LI>
<P><A NAME="1193249">
<CODE>document.myForm.musicTypes.options[i].selected = true
</CODE></P></A>

</ul><A NAME="1193254">
To change an option's text, use is <A HREF="option.htm#1193380"><CODE>Option.text</CODE></A> property. For example, suppose a form has the following <CODE>Select</CODE> object:</A></P>
<PRE><A NAME="1193255">&lt;SELECT name="userChoice"&gt;<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt;Choice 1<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt;Choice 2<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt;Choice 3<br>&lt;/SELECT&gt;</A></PRE><A NAME="1193256">
You can set the text of the <CODE>i</CODE><SUP>th</SUP> item in the selection based on text entered in a text field named <CODE>whatsNew</CODE> as follows:</A></P>
<PRE><A NAME="1193257">myform.userChoice.options[i].text = myform.whatsNew.value</A></PRE><A NAME="1193258">
You do not need to reload or refresh after changing an option's text.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193259">
 Examples
</A></H4>

<A NAME="1193260">
The following example creates two <CODE>Select</CODE> objects, one with and one without the <CODE>MULTIPLE</CODE> attribute. No options are initially defined for either object. When the user clicks a button associated with the <CODE>Select</CODE> object, the <CODE>populate</CODE> function creates four options for the <CODE>Select</CODE> object and selects the first option.</A></P>
<PRE><A NAME="1193261">&lt;SCRIPT&gt;<br>function populate(inForm) {<br>&nbsp;&nbsp;&nbsp;colorArray = new Array("Red", "Blue", "Yellow", "Green")</A></PRE><PRE><A NAME="1193262">&nbsp;&nbsp;&nbsp;var option0 = new Option("Red", "color_red")<br>&nbsp;&nbsp;&nbsp;var option1 = new Option("Blue", "color_blue")<br>&nbsp;&nbsp;&nbsp;var option2 = new Option("Yellow", "color_yellow")<br>&nbsp;&nbsp;&nbsp;var option3 = new Option("Green", "color_green")</A></PRE><PRE><A NAME="1193263">&nbsp;&nbsp;&nbsp;for (var i=0; i &lt; 4; i++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;eval("inForm.selectTest.options[i]=option" + i)<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (i==0) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;inForm.selectTest.options[i].selected=true<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}</A></PRE><PRE><A NAME="1193264">&nbsp;&nbsp;&nbsp;history.go(0)<br>}<br>&lt;/SCRIPT&gt;</A></PRE><PRE><A NAME="1193265"><br>&lt;H3&gt;Select Option() constructor&lt;/H3&gt;<br>&lt;FORM&gt;<br>&lt;SELECT NAME="selectTest"&gt;&lt;/SELECT&gt;&lt;P&gt;<br>&lt;INPUT TYPE="button" VALUE="Populate Select List" onClick="populate(this.form)"&gt;<br>&lt;P&gt;<br>&lt;/FORM&gt;</A></PRE><PRE><A NAME="1193266">&lt;HR&gt;<br>&lt;H3&gt;Select-Multiple Option() constructor&lt;/H3&gt;<br>&lt;FORM&gt;<br>&lt;SELECT NAME="selectTest" multiple&gt;&lt;/SELECT&gt;&lt;P&gt;<br>&lt;INPUT TYPE="button" VALUE="Populate Select List" onClick="populate(this.form)"&gt;<br>&lt;/FORM&gt;</A></PRE>
<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193270">
defaultSelected
</A></H2>

<A NAME="1193272">
A Boolean value indicating the default selection state of an option in a selection list. <TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193275">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193280">
<A HREF="option.htm#1193136"><CODE>Option</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193282">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193284">
JavaScript 1.1</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193285">
 Security
</A></H4>

<B><A NAME="HeadRunIn;"></A>
<A NAME="1197429">
JavaScript 1.1. </A></B><A NAME="1193286">
This property is tainted by default. For information on data tainting, see the <A HREF="http://developer.netscape.com/docs/manuals/js/client/jsguide/index.htm" TARGET="_top"><I>Client-Side JavaScript Guide</I></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193290">
 Description
</A></H4>

<A NAME="1193291">
If an option is selected by default, the value of the <CODE>defaultSelected</CODE> property is true; otherwise, it is false. <CODE>defaultSelected</CODE> initially reflects whether the <CODE>SELECTED</CODE> attribute is used within an <CODE>OPTION</CODE> tag; however, setting <CODE>defaultSelected</CODE> overrides the <CODE>SELECTED</CODE> attribute.</A></P>
<A NAME="1193292">
You can set the <CODE>defaultSelected</CODE> property at any time. The display of the corresponding <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object does not update when you set the <CODE>defaultSelected</CODE> property of an option, only when you set the <A HREF="option.htm#1197646"><CODE>Option.selected</CODE></A> or <A HREF="select.htm#1193420"><CODE>Select.selectedIndex</CODE></A> properties.</A></P>
<A NAME="1193305">
A <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object created without the <CODE>MULTIPLE</CODE> attribute can have only one option selected by default. When you set <CODE>defaultSelected</CODE> in such an object, any previous default selections, including defaults set with the <CODE>SELECTED</CODE> attribute, are cleared. If you set <CODE>defaultSelected</CODE> in a <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object created with the <CODE>MULTIPLE</CODE> attribute, previous default selections are not affected.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193309">
 Examples
</A></H4>

<A NAME="1193310">
In the following example, the <CODE>restoreDefault</CODE> function returns the <CODE>musicType</CODE> <CODE>Select</CODE> object to its default state. The <CODE>for</CODE> loop uses the <CODE>options</CODE> array to evaluate every option in the <CODE>Select</CODE> object. The <CODE>if</CODE> statement sets the <CODE>selected</CODE> property if <CODE>defaultSelected</CODE> is true.</A></P>
<PRE><A NAME="1193311">function restoreDefault() {<br>&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; document.musicForm.musicType.length; i++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (document.musicForm.musicType.options[i].defaultSelected == true) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;document.musicForm.musicType.options[i].selected=true<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>}</A></PRE><A NAME="1193312">
The previous example assumes that the <CODE>Select</CODE> object is similar to the following:</A></P>
<PRE><A NAME="1193313">&lt;SELECT NAME="musicType"&gt; <br>&nbsp;&nbsp;&nbsp;&lt;OPTION SELECTED&gt; R&amp;B<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; Jazz<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; Blues<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; New Age<br>&lt;/SELECT&gt;</A></PRE>
<H4><A NAME="Head3;"></A>
<A NAME="1193314">
 See also
</A></H4>

<A NAME="1197644">
<A HREF="option.htm#1197646"><CODE>Option.selected</CODE></A>, <A HREF="select.htm#1193420"><CODE>Select.selectedIndex</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1197755">
index
</A></H2>

<A NAME="1197771">
The zero-based index of an element in the <A HREF="select.htm#1193366"><CODE>Select.options</CODE></A> array.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1197759">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1197764">
<A HREF="option.htm#1193136"><CODE>Option</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1197766">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1197768">
JavaScript 1.0</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1197780">
 Description
</A></H4>

<A NAME="1197781">
The <CODE>index</CODE> property specifies the position of an element in the <A HREF="select.htm#1193366"><CODE>Select.options</CODE></A> array, starting with 0.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1197782">
 Examples
</A></H4>

<A NAME="1197783">
In the following example, the <CODE>getChoice</CODE> function returns the value of the <CODE>index</CODE> property for the selected option. The <CODE>for</CODE> loop evaluates every option in the <CODE>musicType</CODE> <CODE>Select</CODE> object. The <CODE>if</CODE> statement finds the option that is selected.</A></P>
<PRE><A NAME="1197784">function getChoice() {<br>&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; document.musicForm.musicType.length; i++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (document.musicForm.musicType.options[i].selected == true) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return document.musicForm.musicType.options[i].index<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;return null<br>}</A></PRE><A NAME="1197785">
The previous example assumes that the <CODE>Select</CODE> object is similar to the following:</A></P>
<PRE><A NAME="1197786">&lt;SELECT NAME="musicType"&gt;<br>&nbsp;&nbsp;&nbsp;&lt;OPTION SELECTED&gt; R&amp;B<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; Jazz<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; Blues<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; New Age<br>&lt;/SELECT&gt;</A></PRE><A NAME="1198666">
Note that you can also determine the index of the selected option in this example by using <CODE>document.musicForm.musicType.selectedIndex.</CODE></A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1198741">
length
</A></H2>

<A NAME="1198757">
The number of elements in the <A HREF="select.htm#1193366"><CODE>Select.options</CODE></A> array.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1198747">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1198752">
<A HREF="option.htm#1193136"><CODE>Option</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1198951">
Read-only</A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1198953">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1198754">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1198756">
JavaScript 1.0</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1198962">
 Description
</A></H4>

<A NAME="1198963">
This value of this property is the same as the value of <A HREF="select.htm#1193313"><CODE>Select.length</CODE></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1198763">
 Examples
</A></H4>

<A NAME="1198764">
See <A HREF="option.htm#1197755"><CODE>Option.index</CODE></A> for an example of the <CODE>length</CODE> property.</A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1197646">
selected
</A></H2>

<A NAME="1197659">
A Boolean value indicating whether an option in a <CODE>Select</CODE> object is selected.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1197649">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1197654">
<A HREF="option.htm#1193136"><CODE>Option</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1197656">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1197658">
JavaScript 1.0</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193337">
 Security
</A></H4>

<B><A NAME="HeadRunIn;"></A>
<A NAME="1197457">
JavaScript 1.1. </A></B><A NAME="1193338">
This property is tainted by default. For information on data tainting, see the <A HREF="http://developer.netscape.com/docs/manuals/js/client/jsguide/index.htm" TARGET="_top"><I>Client-Side JavaScript Guide</I></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193342">
 Description
</A></H4>

<A NAME="1193346">
If an option in a <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object is selected, the value of its <CODE>selected</CODE> property is true; otherwise, it is false. You can set the <CODE>selected</CODE> property at any time. The display of the associated <A HREF="select.htm#1193137"><CODE>Select</CODE></A> object updates immediately when you set the <CODE>selected</CODE> property for one of its options.</A></P>
<A NAME="1193353">
In general, the <A HREF="option.htm#1197646"><CODE>Option.selected</CODE></A> property is more useful than the <A HREF="select.htm#1193420"><CODE>Select.selectedIndex</CODE></A> property for <A HREF="select.htm#1193137"><CODE>Select</CODE></A> objects that are created with the <CODE>MULTIPLE</CODE> attribute. With the <A HREF="option.htm#1197646"><CODE>Option.selected</CODE></A> property, you can evaluate every option in the <A HREF="select.htm#1193366"><CODE>Select.options</CODE></A> array to determine multiple selections, and you can select individual options without clearing the selection of other options.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193366">
 Examples
</A></H4>

<A NAME="1193370">
See the examples for <A HREF="option.htm#1193270"><CODE>defaultSelected</CODE></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193371">
 See also
</A></H4>

<A NAME="1193378">
<A HREF="option.htm#1193270"><CODE>Option.defaultSelected</CODE></A>, <A HREF="select.htm#1193420"><CODE>Select.selectedIndex</CODE></A> </A></P>

<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193380">
text
</A></H2>

<A NAME="1193394">
A string specifying the text of an option in a selection list.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193384">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193389">
<A HREF="option.htm#1193136"><CODE>Option</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193391">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193393">
JavaScript 1.0</A></P><P><A NAME="1193751">
</A></P><P><A NAME="1193752">
JavaScript 1.1: The <CODE>text</CODE> property can be changed to updated the selection option. In previous releases, you could set the <CODE>text</CODE> property but the new value was not reflected in the <CODE>Select</CODE> object.</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193395">
 Security
</A></H4>

<B><A NAME="HeadRunIn;"></A>
<A NAME="1197469">
JavaScript 1.1. </A></B><A NAME="1193396">
This property is tainted by default. For information on data tainting, see the <A HREF="http://developer.netscape.com/docs/manuals/js/client/jsguide/index.htm" TARGET="_top"><I>Client-Side JavaScript Guide</I></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193400">
 Description
</A></H4>

<A NAME="1193401">
The <CODE>text</CODE> property initially reflects the text that follows an <CODE>OPTION</CODE> tag of a <CODE>SELECT</CODE> tag. You can set the <CODE>text</CODE> property at any time and the text displayed by the option in the selection list changes.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193402">
 Examples
</A></H4>

<A NAME="1193403">
<B>Example 1. </B>In the following example, the <CODE>getChoice</CODE> function returns the value of the <CODE>text</CODE> property for the selected option. The <CODE>for</CODE> loop evaluates every option in the <CODE>musicType</CODE> <CODE>Select</CODE> object. The <CODE>if</CODE> statement finds the option that is selected.</A></P>
<PRE><A NAME="1193404">function getChoice() {<br>&nbsp;&nbsp;&nbsp;for (var i = 0; i &lt; document.musicForm.musicType.length; i++) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (document.musicForm.musicType.options[i].selected == true) {<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return document.musicForm.musicType.options[i].text<br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;}<br>&nbsp;&nbsp;&nbsp;return null<br>}</A></PRE><A NAME="1193405">
The previous example assumes that the <CODE>Select</CODE> object is similar to the following:</A></P>
<PRE><A NAME="1193406">&lt;SELECT NAME="musicType"&gt;<br>&nbsp;&nbsp;&nbsp;&lt;OPTION SELECTED&gt; R&amp;B<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; Jazz<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; Blues<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt; New Age<br>&lt;/SELECT&gt;</A></PRE><A NAME="1193407">
<B>Example 2. </B>In the following form, the user can enter some text in the first text field and then enter a number between 0 and 2 (inclusive) in the second text field. When the user clicks the button, the text is substituted for the indicated option number and that option is selected.<P>
<IMG SRC="graphics/selectop.gif">
</A></P>
<A NAME="1193411">
The code for this example looks as follows:</A></P>
<PRE><A NAME="1193412">&lt;SCRIPT&gt;<br>function updateList(theForm, i) {<br>&nbsp;&nbsp;&nbsp;theForm.userChoice.options[i].text = theForm.whatsNew.value<br>&nbsp;&nbsp;&nbsp;theForm.userChoice.options[i].selected = true<br>}<br>&lt;/SCRIPT&gt;<br>&lt;FORM&gt;<br>&lt;SELECT name="userChoice"&gt;<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt;Choice 1<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt;Choice 2<br>&nbsp;&nbsp;&nbsp;&lt;OPTION&gt;Choice 3<br>&lt;/SELECT&gt;<br>&lt;BR&gt;<br>New text for the option: &lt;INPUT TYPE="text" NAME="whatsNew"&gt;<br>&lt;BR&gt;<br>Option to change (0, 1, or 2): &lt;INPUT TYPE="text" NAME="idx"&gt;<br>&lt;BR&gt;<br>&lt;INPUT TYPE="button" VALUE="Change Selection"<br>onClick="updateList(this.form, this.form.idx.value)"&gt;<br>&lt;/FORM&gt;</A></PRE>
<HR><H2><A NAME="Head2Ref;"></A>
<A NAME="1193419">
value
</A></H2>

<A NAME="1193436">
A string that reflects the <CODE>VALUE</CODE> attribute of the option.<TABLE BORDER="0">
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193422">
<I>Property of</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193427">
<A HREF="option.htm#1193136"><CODE>Option</CODE></A></A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193429">
<I>Read-only</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193431">
</A></P>
<TR><TD VALIGN=baseline ALIGN=left><P><A NAME="1193433">
<I>Implemented in</I></A></P><TD VALIGN=baseline ALIGN=left><P><A NAME="1193435">
JavaScript 1.0</A></P>

</TABLE>
</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193437">
 Security
</A></H4>

<B><A NAME="HeadRunIn;"></A>
<A NAME="1197417">
JavaScript 1.1. </A></B><A NAME="1193438">
This property is tainted by default. For information on data tainting, see the <A HREF="http://developer.netscape.com/docs/manuals/js/client/jsguide/index.htm" TARGET="_top"><I>Client-Side JavaScript Guide</I></A>.</A></P>

<H4><A NAME="Head3;"></A>
<A NAME="1193442">
 Description
</A></H4>

<A NAME="1193443">
When a <CODE>VALUE</CODE> attribute is specified in HTML, the <CODE>value</CODE> property is a string that reflects it. When a <CODE>VALUE</CODE> attribute is not specified in HTML, the <CODE>value</CODE> property is the empty string. The <CODE>value</CODE> property is not displayed on the screen but is returned to the server if the option is selected.</A></P>
<A NAME="1193444">
Do not confuse the property with the selection state of the option or the text that is displayed next to it. The <A HREF="option.htm#1197646"><CODE>selected</CODE></A> property determines the selection state of the object, and the <A HREF="option.htm#1193270"><CODE>defaultSelected</CODE></A> property determines the default selection state. The text that is displayed is specified following the <CODE>OPTION</CODE> tag and corresponds to the <A HREF="option.htm#1193380"><CODE>text</CODE></A> property.</A></P>

<HR>

<FONT SIZE=-1><A HREF="contents.htm">Table of Contents</A> | <A HREF="object.htm">Previous</A>
 | <A HREF="packages.htm">Next</A>
 | <A HREF="bklast.htm">Index</A>
</FONT>
<P ALIGN=right>
<FONT SIZE=-2><I>Last Updated:  05/28/99  12:00:06</I></FONT>
<P> <CENTER>Copyright (c) 1999
<A HREF="http://home.netscape.com/misc/contact_info.html"
TARGET=_top>Netscape Communications Corporation</A></FONT>
</CENTER>
<P>
</BODY>
</HTML>


