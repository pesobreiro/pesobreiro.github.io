<%@LANGUAGE="JAVASCRIPT" CODEPAGE="1252"%><!--#include file="../../../Connections/Esdrm.asp" --><%	if ((Session("Login") == "jorgemadeira") || (Session("Login") == "trindade"))	{	}	else	{		//Entrou com sucesso		Response.Redirect("alterar.asp");	}%><%var rstUtilizadores = Server.CreateObject("ADODB.Recordset");rstUtilizadores.ActiveConnection = MM_Esdrm_STRING;rstUtilizadores.Source = "SELECT dbo.TabUtilizadores.titulo, dbo.TabUtilizadores.numero, dbo.Titulo.Descricao,       dbo.TabUtilizadores.nomeUser,       dbo.tabTipoUtilizador.TabTipoDesc  FROM dbo.tabTipoUtilizador INNER JOIN      dbo.TabUtilizadores ON       dbo.tabTipoUtilizador.IdUser = dbo.TabUtilizadores.tipoUtilizador       INNER JOIN      dbo.Titulo ON dbo.TabUtilizadores.titulo = dbo.Titulo.IdTitulo  ORDER BY nomeUser";rstUtilizadores.CursorType = 0;rstUtilizadores.CursorLocation = 2;rstUtilizadores.LockType = 1;rstUtilizadores.Open();var rstUtilizadores_numRows = 0;%><%var Repeat1__numRows = 15;var Repeat1__index = 0;rstUtilizadores_numRows += Repeat1__numRows;%><%// *** Recordset Stats, Move To Record, and Go To Record: declare stats variables// set the record countvar rstUtilizadores_total = rstUtilizadores.RecordCount;// set the number of rows displayed on this pageif (rstUtilizadores_numRows < 0) {            // if repeat region set to all records  rstUtilizadores_numRows = rstUtilizadores_total;} else if (rstUtilizadores_numRows == 0) {    // if no repeat regions  rstUtilizadores_numRows = 1;}// set the first and last displayed recordvar rstUtilizadores_first = 1;var rstUtilizadores_last  = rstUtilizadores_first + rstUtilizadores_numRows - 1;// if we have the correct record count, check the other statsif (rstUtilizadores_total != -1) {  rstUtilizadores_numRows = Math.min(rstUtilizadores_numRows, rstUtilizadores_total);  rstUtilizadores_first   = Math.min(rstUtilizadores_first, rstUtilizadores_total);  rstUtilizadores_last    = Math.min(rstUtilizadores_last, rstUtilizadores_total);}%><% var MM_paramName = ""; %><%// *** Move To Record and Go To Record: declare variablesvar MM_rs        = rstUtilizadores;var MM_rsCount   = rstUtilizadores_total;var MM_size      = rstUtilizadores_numRows;var MM_uniqueCol = "";    MM_paramName = "";var MM_offset = 0;var MM_atTotal = false;var MM_paramIsDefined = (MM_paramName != "" && String(Request(MM_paramName)) != "undefined");%><%// *** Move To Record: handle 'index' or 'offset' parameterif (!MM_paramIsDefined && MM_rsCount != 0) {  // use index parameter if defined, otherwise use offset parameter  r = String(Request("index"));  if (r == "undefined") r = String(Request("offset"));  if (r && r != "undefined") MM_offset = parseInt(r);  // if we have a record count, check if we are past the end of the recordset  if (MM_rsCount != -1) {    if (MM_offset >= MM_rsCount || MM_offset == -1) {  // past end or move last      if ((MM_rsCount % MM_size) != 0) {  // last page not a full repeat region        MM_offset = MM_rsCount - (MM_rsCount % MM_size);      } else {        MM_offset = MM_rsCount - MM_size;      }    }  }  // move the cursor to the selected record  for (var i=0; !MM_rs.EOF && (i < MM_offset || MM_offset == -1); i++) {    MM_rs.MoveNext();  }  if (MM_rs.EOF) MM_offset = i;  // set MM_offset to the last possible record}%><%// *** Move To Record: if we dont know the record count, check the display rangeif (MM_rsCount == -1) {  // walk to the end of the display range for this page  for (var i=MM_offset; !MM_rs.EOF && (MM_size < 0 || i < MM_offset + MM_size); i++) {    MM_rs.MoveNext();  }  // if we walked off the end of the recordset, set MM_rsCount and MM_size  if (MM_rs.EOF) {    MM_rsCount = i;    if (MM_size < 0 || MM_size > MM_rsCount) MM_size = MM_rsCount;  }  // if we walked off the end, set the offset based on page size  if (MM_rs.EOF && !MM_paramIsDefined) {    if ((MM_rsCount % MM_size) != 0) {  // last page not a full repeat region      MM_offset = MM_rsCount - (MM_rsCount % MM_size);    } else {      MM_offset = MM_rsCount - MM_size;    }  }  // reset the cursor to the beginning  if (MM_rs.CursorType > 0) {    if (!MM_rs.BOF) MM_rs.MoveFirst();  } else {    MM_rs.Requery();  }  // move the cursor to the selected record  for (var i=0; !MM_rs.EOF && i < MM_offset; i++) {    MM_rs.MoveNext();  }}%><%// *** Move To Record: update recordset stats// set the first and last displayed recordrstUtilizadores_first = MM_offset + 1;rstUtilizadores_last  = MM_offset + MM_size;if (MM_rsCount != -1) {  rstUtilizadores_first = Math.min(rstUtilizadores_first, MM_rsCount);  rstUtilizadores_last  = Math.min(rstUtilizadores_last, MM_rsCount);}// set the boolean used by hide region to check if we are on the last recordMM_atTotal = (MM_rsCount != -1 && MM_offset + MM_size >= MM_rsCount);%><%// *** Go To Record and Move To Record: create strings for maintaining URL and Form parameters// create the list of parameters which should not be maintainedvar MM_removeList = "&index=";if (MM_paramName != "") MM_removeList += "&" + MM_paramName.toLowerCase() + "=";var MM_keepURL="",MM_keepForm="",MM_keepBoth="",MM_keepNone="";// add the URL parameters to the MM_keepURL stringfor (var items=new Enumerator(Request.QueryString); !items.atEnd(); items.moveNext()) {  var nextItem = "&" + items.item().toLowerCase() + "=";  if (MM_removeList.indexOf(nextItem) == -1) {    MM_keepURL += "&" + items.item() + "=" + Server.URLencode(Request.QueryString(items.item()));  }}// add the Form variables to the MM_keepForm stringfor (var items=new Enumerator(Request.Form); !items.atEnd(); items.moveNext()) {  var nextItem = "&" + items.item().toLowerCase() + "=";  if (MM_removeList.indexOf(nextItem) == -1) {    MM_keepForm += "&" + items.item() + "=" + Server.URLencode(Request.Form(items.item()));  }}// create the Form + URL string and remove the intial '&' from each of the stringsMM_keepBoth = MM_keepURL + MM_keepForm;if (MM_keepBoth.length > 0) MM_keepBoth = MM_keepBoth.substring(1);if (MM_keepURL.length > 0)  MM_keepURL = MM_keepURL.substring(1);if (MM_keepForm.length > 0) MM_keepForm = MM_keepForm.substring(1);%><%// *** Move To Record: set the strings for the first, last, next, and previous linksvar MM_moveFirst="",MM_moveLast="",MM_moveNext="",MM_movePrev="";var MM_keepMove = MM_keepBoth;  // keep both Form and URL parameters for movesvar MM_moveParam = "index";// if the page has a repeated region, remove 'offset' from the maintained parametersif (MM_size > 1) {  MM_moveParam = "offset";  if (MM_keepMove.length > 0) {    params = MM_keepMove.split("&");    MM_keepMove = "";    for (var i=0; i < params.length; i++) {      var nextItem = params[i].substring(0,params[i].indexOf("="));      if (nextItem.toLowerCase() != MM_moveParam) {        MM_keepMove += "&" + params[i];      }    }    if (MM_keepMove.length > 0) MM_keepMove = MM_keepMove.substring(1);  }}// set the strings for the move to linksif (MM_keepMove.length > 0) MM_keepMove += "&";var urlStr = Request.ServerVariables("URL") + "?" + MM_keepMove + MM_moveParam + "=";MM_moveFirst = urlStr + "0";MM_moveLast  = urlStr + "-1";MM_moveNext  = urlStr + (MM_offset + MM_size);MM_movePrev  = urlStr + Math.max(MM_offset - MM_size,0);%><html><head><title>Mostrar Utilizadores</title><meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"><script language="JavaScript" type="text/JavaScript"><!--function jsTrim(TXT)    {    	return TXT.replace(/(^\s+)|(\s+$)/g,"");}function jsLTrim(TXT)    {    	return TXT.replace(/(^\s+)/g,"");}function jsRTrim(TXT)    {    	return TXT.replace(/(\s+$)/g,"");}function MM_goToURL() { //v3.0  var i, args=MM_goToURL.arguments; document.MM_returnValue = false;  for (i=0; i<(args.length-1); i+=2) eval(args[i]+".location='"+args[i+1]+"'");}//--></script><link href="../../../CSS/css.css" rel="stylesheet" type="text/css"></head><body background="../../../Fundos/exptextb.jpg"><div align="center"><strong><font size="5">Listagem Ordenada por Nome de Todos   os Utilizadores</font></strong><br>  <br>  <table width="636" border="1">    <tr bgcolor="#CCCC99">       <td width="134"><strong>Titulo</strong></td>      <td width="235"><strong>Nome abreviado</strong></td>      <td colspan="2"><strong>Tipo de Utilizador</strong></td>    </tr>    <% while ((Repeat1__numRows-- != 0) && (!rstUtilizadores.EOF)) { %>    <tr bgcolor="#F0F0F0">       <td width="134" height="1%"><div align="center"><%=(rstUtilizadores.Fields.Item("Descricao").Value)%></div></td>      <td height="1%"><%=(rstUtilizadores.Fields.Item("nomeUser").Value)%></td>      <td width="188" height="1%"><%=(rstUtilizadores.Fields.Item("TabTipoDesc").Value)%></td>      <td width="51" height="1%"><div align="center">           <input name="Alterar" type="button" class="botao_alterar" id="Voltar" onClick="MM_goToURL('parent','Alterar.asp?<%=(rstUtilizadores.Fields("numero").Value)%>');return document.MM_returnValue" value="Alterar">        </div></td>    </tr>    <%  Repeat1__index++;  rstUtilizadores.MoveNext();}%>  </table>  <table border="0" width="57%" align="center">    <tr>       <td width="23%" align="center"> <% if (MM_offset != 0) { %>        <a href="<%=MM_moveFirst%>">Primeira Página</a>         <% } // end MM_offset != 0 %> </td>      <td width="28%" align="center"> <% if (MM_offset != 0) { %>        <a href="<%=MM_movePrev%>">Página Anterior</a>         <% } // end MM_offset != 0 %> </td>      <td width="26%" align="center"> <% if (!MM_atTotal) { %>        <a href="<%=MM_moveNext%>">Página Seguinte</a>         <% } // end !MM_atTotal %> </td>      <td width="23%" align="center"> <% if (!MM_atTotal) { %>        <a href="<%=MM_moveLast%>">Última Página</a>         <% } // end !MM_atTotal %> </td>    </tr>  </table>  <br>  <input name="Button" type="button" class="botao_actualizar" onClick="MM_goToURL('parent','../../../CentroInformatica/centroInformatica.asp');return document.MM_returnValue" value="Voltar &agrave; P&aacute;gina do Centro"></div></body></html><%rstUtilizadores.Close();%>