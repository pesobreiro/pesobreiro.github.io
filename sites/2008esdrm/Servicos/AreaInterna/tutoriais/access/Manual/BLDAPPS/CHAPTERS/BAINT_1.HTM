<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML//EN" BORDER=0  OnClick='SyncURL("chapters/!DOCTYPE HTML PUBLIC ")' >
<html><head><title>Introduction</title>
<link REL="STYLESHEET" HREF="naetugp.css" TYPE="text/css">
<script Language="VBScript">
Dim look
Sub SyncURL(look)
if right(top.frames(0).frames(1).location.href, 10)="toc_tc.htm" then
top.frames(0).frames(1).TreeCtl1.SyncToURL(look)
end if
End Sub
</script>
<meta name="Microsoft Theme" content="expeditn 011, default"></head>
<!--DocHeaderStart-->
<body background="../../../../_themes/expeditn/exptextb.jpg" bgcolor="#FFFFFF" text="#000000" link="#993300" vlink="#666600" alink="#CC3300"><!--mstheme--><font face="book antiqua, times new roman, times">
<!--DocHeaderEnd-->
<!-- This is a PANDA Generated HTML file. The source is a WinWord Document. -->
<p CLASS="ChapterAppendixTitlecht">Introduction</p>
<p CLASS="Textttext">
<p CLASS="Textttext">Welcome to <span CLASS="NewTermntrm">Building Applications with Microsoft Access 97</span>, your guide to designing and creating Microsoft® Access applications. In this book, you'll find out how to build applications that you and others can use to effectively manage data. In addition, you'll learn how to use Visual Basic® for Applications<img SRC="../images/Emdash.gif" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="16" HEIGHT="5">the programming language included in Microsoft Access<img SRC="../images/Emdash.gif" BORDER="0" VSPACE="0" HSPACE="0" WIDTH="16" HEIGHT="5">to go beyond what you can accomplish by using only the Microsoft Access interface. With Visual Basic, you can extend and customize your application to fit your needs and those of your users.
<p CLASS="Textttext">If you're new to Microsoft Access, look first at <span CLASS="NewTermntrm">Getting Results with Microsoft Access 97</span> for information on creating the objects that make up a Microsoft Access database. In addition, consult the Office Assistant with questions that arise as you learn Microsoft Access.
<p CLASS="Textttext">This book has four sections:
<p CLASS="Textttext">The first section, which includes Chapters 1 through 3, shows you how to tie database objects together into a coherent system and introduces Visual Basic for Applications, the programming language used in Microsoft Access. Examples in this section are based on the Orders sample application included with the Microsoft Access sample applications.
<p CLASS="Textttext">The second section, which includes Chapters 4 through 8, describes the elements of Visual Basic in more detail, including an overview of the objects and collections you can work with in Visual Basic and the events you can respond to. In addition, it shows you how to use the Visual Basic debugging tools to test and debug your Visual Basic code, and explains how to respond to errors that occur while your code is running.
<p CLASS="Textttext">The third section, which includes Chapters 9 through 15, shows you how to accomplish complex data management tasks in your application, including manipulating sets of records in code, developing an application for multiple users, communicating with other applications such as Microsoft Excel or Microsoft Word, and using library databases and dynamic-link libraries. In addition, the third section explains how to optimize, secure, and deliver your application to users.
<p CLASS="Textttext">The fourth section, which includes Chapters 16 through 21, explores powerful features that address special development needs, such as using ActiveX&#153; controls, creating your own wizards and add-ins, working with external or client/server data, implementing database replication, and developing applications for the Internet and the World Wide Web.</p>
<a NAME="3WhatsNewinMicrosoftAccess"></a>
<p CLASS="heading3OrgHeading1h1">What's New in Microsoft Access 97</p>
<p CLASS="Textttext">Microsoft Access for Windows® 95 introduced many new features for application development. Microsoft Access 97 introduces additional new features, as well as enhancements to existing features. The following sections highlight new features introduced in both versions. </p>
<p CLASS="CrossRefTextcrt"><span CLASS="CrossRefHeadingcrh">See Also&nbsp;&nbsp;&nbsp;</span>For more detailed information on new features in Microsoft Access, search the Help index for &quot;what's new.&quot;</p>
<p CLASS="NoteTextnt"><span CLASS="NoteHeadingnh">Note&nbsp;&nbsp;&nbsp;</span>If you have applications that were created with Microsoft Access 95 or earlier, you'll need to consider several important changes that affect your existing code and database objects. For more information, search the Help index for &quot;converting databases.&quot;</p>
<a NAME="4VisualBasicforApplicationsProgrammingLanguage"></a>
<p CLASS="heading4OrgHeading2h2">Visual Basic for Applications Programming Language</p>
<p CLASS="Textttext">Visual Basic for Applications replaces Access Basic, which was used in versions 2.0 and earlier, as the programming language for Microsoft Access. This is the same language you use to program in Microsoft Word, Microsoft Excel, and Microsoft Project, as well as the same language found in Microsoft Visual Basic.
<p CLASS="Textttext"><span CLASS="ElementNameeln">Object-Oriented Language Framework&nbsp;&nbsp;&nbsp;</span>You can now declare procedures and variables as <span CLASS="ElementNameeln">Public</span> in form and report modules, making them available to other modules in your application. In Microsoft Access 97, you can also use class modules to create custom objects and define your own methods and properties for them. See Chapter 2, <a HREF="../chapters/ba02_1.htm" OnClick="SyncURL(&quot;chapters/ba02_1.htm&quot;)">&quot;Introducing Visual Basic&quot;</a> and Chapter 4, <a HREF="../chapters/ba04_1.htm" OnClick="SyncURL(&quot;chapters/ba04_1.htm&quot;)">&quot;Working with Variables, Data Types, and Constants.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Object Creation Syntax&nbsp;&nbsp;&nbsp;</span>For creating new objects, Visual Basic adds the <span CLASS="ElementNameeln">New</span> keyword. Using the <span CLASS="ElementNameeln">New</span> keyword, you can open more than one instance of the same form at a time. In Microsoft Access 97, you can also use the <span CLASS="ElementNameeln">New</span> keyword to create a new instance of a Visual Basic class. See Chapter 5, <a HREF="../chapters/ba05_1.htm" OnClick="SyncURL(&quot;chapters/ba05_1.htm&quot;)">&quot;Working with Objects and Collections.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Flexible Arguments for Procedures&nbsp;&nbsp;&nbsp;</span>Using the <span CLASS="ElementNameeln">Optional</span> keyword, you can declare a procedure with optional arguments. Or, using the <span CLASS="ElementNameeln">ParamArray</span> keyword, you can use a variable number of arguments. Also, when calling a procedure, you can specify arguments by name. This makes your code more readable and allows you to pass arguments in any order you like. See Chapter 2, <a HREF="../chapters/ba02_1.htm" OnClick="SyncURL(&quot;chapters/ba02_1.htm&quot;)">&quot;Introducing Visual Basic.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Conditional Compilation&nbsp;&nbsp;&nbsp;</span>Using the <span CLASS="ElementNameeln">#If...Then</span> and<span CLASS="ElementNameeln"> #End If</span> statements, you can specify code that you want Microsoft Access to include or ignore in your application.
 This is especially useful as a debugging technique. See Chapter 7, <a HREF="../chapters/ba07_1.htm" OnClick="SyncURL(&quot;chapters/ba07_1.htm&quot;)">&quot;Debugging Visual Basic Code.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Faster Performance&nbsp;&nbsp;&nbsp;</span>Microsoft Access includes a new 32-bit version of the Microsoft Jet database engine that is enhanced for improved performance. Because Visual Basic loads only the code you need and performs many operations more quickly than before, your applications load and run faster. In addition, Microsoft Access 97 doesn't create a form module until you need to add code to it. As a result, your project may have fewer modules to compile, which improves compilation performance and loads your forms more quickly. For information on taking advantage of these improvements and enhancing performance in other ways, see Chapter 13, <a HREF="../chapters/ba13_1.htm" OnClick="SyncURL(&quot;chapters/ba13_1.htm&quot;)">&quot;Optimizing Your Application.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Miscellaneous Language Improvements&nbsp;&nbsp;&nbsp;</span>For simpler, more readable code, try using the <span CLASS="ElementNameeln">With</span> and <span CLASS="ElementNameeln">For Each&#133;Next</span> statements. Visual Basic now includes two new data types, <span CLASS="ElementNameeln">Boolean</span> and <span CLASS="ElementNameeln">Byte</span>. Visual Basic also has more powerful user-defined types, which allow you to use the <span CLASS="ElementNameeln">ReDim</span> statement on the arrays they contain and which can now include objects. See Chapter 4, <a HREF="../chapters/ba04_1.htm" OnClick="SyncURL(&quot;chapters/ba04_1.htm&quot;)">&quot;Working with Variables, Data Types, and Constants&quot;</a> and Chapter 5, <a HREF="../chapters/ba05_1.htm" OnClick="SyncURL(&quot;chapters/ba05_1.htm&quot;)">&quot;Working with Objects and Collections.&quot;</a></p>
<a NAME="4NewDevelopmentEnvironment"></a>
<p CLASS="heading4OrgHeading2h2">New Development Environment</p>
<p CLASS="Textttext">The incorporation of Visual Basic for Applications into Microsoft Access brings the following new and improved professional development tools. 
<p CLASS="Textttext"><span CLASS="ElementNameeln">Improved Module Window&nbsp;&nbsp;&nbsp;</span>The Module window is easier to use than ever before, and uses color-coded syntax to make your code easier to read. In Microsoft Access 97, features such as automatic statement building and Data Tips make writing code faster and easier. See Chapter 2, <a HREF="../chapters/ba02_1.htm" OnClick="SyncURL(&quot;chapters/ba02_1.htm&quot;)">&quot;Introducing Visual Basic&quot;</a> and Chapter 7, <a HREF="../chapters/ba07_1.htm" OnClick="SyncURL(&quot;chapters/ba07_1.htm&quot;)">&quot;Debugging Visual Basic Code.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Better Debugging Tools&nbsp;&nbsp;&nbsp;</span>The Debug window contains an Immediate pane, where you can type commands and send information; a Watch pane, which you can use to view the value of an expression or a control while your code is running; and a Locals pane, which automatically provides information on the variables in your procedures while they are running. The Debug window can be open even when you aren't editing a module. See Chapter 7, <a HREF="../chapters/ba07_1.htm" OnClick="SyncURL(&quot;chapters/ba07_1.htm&quot;)">&quot;Debugging Visual Basic Code.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Object Browser&nbsp;&nbsp;&nbsp;</span>The Object Browser helps you navigate between the objects in your system and provides you with a complete, easy-to-use reference for all the functions, constants, objects, methods, and properties available to you. See Chapter 5, <a HREF="../chapters/ba05_1.htm" OnClick="SyncURL(&quot;chapters/ba05_1.htm&quot;)">&quot;Working with Objects and Collections.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Setting References&nbsp;&nbsp;&nbsp;</span>Use the <span CLASS="ElementNameeln">References</span> dialog box (<span CLASS="ElementNameeln">Tools</span> menu) to tell Visual Basic which libraries you want to use in your code. In the<span CLASS="ElementNameeln"> References</span> dialog box, you can change referenced libraries without setting initialization options or restarting Microsoft Access. In addition, Microsoft Access 97 provides a <span CLASS="ElementNameeln">References</span> collection which contains <span CLASS="ElementNameeln">Reference</span> objects that you can use to set and check references in your code. See Chapter 12, <a HREF="../chapters/ba12_1.htm" OnClick="SyncURL(&quot;chapters/ba12_1.htm&quot;)">&quot;Using Library Databases and Dynamic-Link Libraries.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">ODBCDirect&nbsp;&nbsp;&nbsp;</span>You can now use ODBCDirect to access Open Database Connectivity (ODBC) data sources directly, by using Data Access Objects (DAO) features to bypass Microsoft Jet. See Chapter 19, <a HREF="../chapters/ba19_1.htm" OnClick="SyncURL(&quot;chapters/ba19_1.htm&quot;)">&quot;Developing Client/Server Applications.&quot;</a></p>
<a NAME="4PowerfulApplicationswithLessEffort"></a>
<p CLASS="heading4OrgHeading2h2">Powerful Applications with Less Effort</p>
<p CLASS="Textttext">The following features, available to users and developers alike, provide straightforward solutions to some of the challenges of creating a database application.
<p CLASS="Textttext"><span CLASS="ElementNameeln">Database Wizard&nbsp;&nbsp;&nbsp;</span>When you need a simple application right away, or just want to see sample tables, forms, and reports to help you plan your application, the Database Wizard can create all the pieces of many common applications for you. See Chapter 1, <a HREF="../chapters/ba01_1.htm" OnClick="SyncURL(&quot;chapters/ba01_1.htm&quot;)">&quot;Creating an Application.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Startup Options&nbsp;&nbsp;&nbsp;</span>Using the <span CLASS="ElementNameeln">Startup</span> dialog box (<span CLASS="ElementNameeln">Tools</span> menu), you can quickly specify your application's startup form, title bar text, icon, menu, and toolbar, without changing any initialization settings. You use this same interface to make customization options unavailable to your users when you deliver your completed application. See Chapter 1, <a HREF="../chapters/ba01_1.htm" OnClick="SyncURL(&quot;chapters/ba01_1.htm&quot;)">&quot;Creating an Application&quot;</a> and Chapter 15, <a HREF="../chapters/ba15_1.htm" OnClick="SyncURL(&quot;chapters/ba15_1.htm&quot;)">&quot;Delivering Your Application.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Lookup Fields&nbsp;&nbsp;&nbsp;</span>While combo boxes and list boxes are a powerful way to provide lookups between tables, they can be difficult to create and manage in your application. If you add Lookup fields to relate data in two tables, however, all your combo and list boxes will look up data for you with no effort at all. See Chapter 3, <a HREF="../chapters/ba03_1.htm" OnClick="SyncURL(&quot;chapters/ba03_1.htm&quot;)">&quot;Using Forms to Collect, Filter, and Display Information.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Filter By Form Interface&nbsp;&nbsp;&nbsp;</span>Using Filter By Form, it's easy to create a &quot;query-by-form&quot; interface for your users to find data. And you can customize the way the built-in filtering works by setting the <span CLASS="ElementNameeln">Filter</span>, <span CLASS="ElementNameeln">OrderBy</span>, and <span CLASS="ElementNameeln">FilterOn</span> properties and by responding to the Filter and ApplyFilter events. See Chapter 3, <a HREF="../chapters/ba03_1.htm" OnClick="SyncURL(&quot;chapters/ba03_1.htm&quot;)">&quot;Using Forms to Collect, Filter, and Display Information&quot;</a> and Chapter 6, <a HREF="../chapters/ba06_1.htm" OnClick="SyncURL(&quot;chapters/ba06_1.htm&quot;)">&quot;Responding to Events.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Programmable Toolbars and Menu Bars&nbsp;&nbsp;&nbsp;</span>Using the new command bars from Microsoft Office, you can create custom toolbars and menus in your application. See Chapter 1, <a HREF="../chapters/ba01_1.htm" OnClick="SyncURL(&quot;chapters/ba01_1.htm&quot;)">&quot;Creating an Application.&quot;</a></p>
<a NAME="4AdvancedFeatures"></a>
<p CLASS="heading4OrgHeading2h2">Advanced Features</p>
<p CLASS="Textttext">The following advanced features help make Microsoft Access more powerful and extensible.
<p CLASS="Textttext"><span CLASS="ElementNameeln">Automation&nbsp;&nbsp;&nbsp;</span>Microsoft Access can now act as a component that supports Automation, so that you can control it from another application such as Microsoft Excel or Microsoft Visual Basic. See Chapter 11, <a HREF="../chapters/ba11_1.htm" OnClick="SyncURL(&quot;chapters/ba11_1.htm&quot;)">&quot;Communicating with Other Applications.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Report and Keyboard Event Improvements&nbsp;&nbsp;&nbsp;</span>Two new report events, the Page event and the NoData event, help you respond to common report printing problems. The new <span CLASS="ElementNameeln">KeyPreview</span> property makes it easier to process keyboard events on a form. See Chapter 6, <a HREF="../chapters/ba06_1.htm" OnClick="SyncURL(&quot;chapters/ba06_1.htm&quot;)">&quot;Responding to Events.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Object Model Improvements&nbsp;&nbsp;&nbsp;</span>For more control over your application and its environment, use the <span CLASS="ElementNameeln">Screen</span> object, new methods of the <span CLASS="ElementNameeln">Application</span> object, and the <span CLASS="ElementNameeln">Err</span> and <span CLASS="ElementNameeln">Error</span> objects. See Chapter 5, <a HREF="../chapters/ba05_1.htm" OnClick="SyncURL(&quot;chapters/ba05_1.htm&quot;)">&quot;Working with Objects and Collections&quot;</a> and Chapter 8, <a HREF="../chapters/ba08_1.htm" OnClick="SyncURL(&quot;chapters/ba08_1.htm&quot;)">&quot;Handling Run-Time Errors.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">New ActiveX Controls&nbsp;&nbsp;&nbsp;</span>With ActiveX controls, formerly called OLE controls or custom controls, you can produce more functional applications. ActiveX controls are now integrated with the toolbox and property sheet. See Chapter 16, <a HREF="../chapters/ba16_1.htm" OnClick="SyncURL(&quot;chapters/ba16_1.htm&quot;)">&quot;Using ActiveX Controls.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Database Replication&nbsp;&nbsp;&nbsp;</span>If users of your application need to share data, but aren't always connected to the network, database replication may be for you. With database replication, Microsoft Access automatically synchronizes changes between databases. In Microsoft Access 97, you can choose to replicate only part of your database. This gives you more control over access to your data and makes your replicated applications easier to maintain. See Chapter 20, <a HREF="../chapters/ba20_1.htm" OnClick="SyncURL(&quot;chapters/ba20_1.htm&quot;)">&quot;Using Replication in Your Application.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">Removing Source Code from Your Application&nbsp;&nbsp;&nbsp;</span>You can prevent users of your application from viewing or changing your code or the design of your forms and reports by saving your application as an MDE file. When you save your application as an MDE file, Microsoft Access removes all source code from a copy of your database. Your code is compiled and continues to run, but it cannot be viewed or updated. See Chapter 14, <a HREF="../chapters/ba14_1.htm" OnClick="SyncURL(&quot;chapters/ba14_1.htm&quot;)">&quot;Securing Your Application.&quot;</a>
<p CLASS="Textttext"><span CLASS="ElementNameeln">New Internet Features&nbsp;&nbsp;&nbsp;</span>With the new Hyperlink data type, you can include hyperlink addresses in your application. Hyperlinks jump to documents located on the Internet or on an internal Web (intranet), or even to other documents or database objects located on your computer. See Chapter 21, <a HREF="../chapters/ba21_1.htm" OnClick="SyncURL(&quot;chapters/ba21_1.htm&quot;)">&quot;Developing Applications for the Internet and the World Wide Web.&quot;</a></p>
<p><!--DocFooterStart-->
<p><span CLASS="copyright"><a HREF="cpyright.htm">© 1996 Microsoft Corporation. All rights reserved.</a></span>
<p><!--DocFooterEnd-->
<a HREF="baint_2.htm" OnClick="SyncURL(&quot;chapters/baint_2.htm&quot;)"><img SRC="..\images\nextpage.gif" ALT="Next Page" ALIGN="RIGHT" BORDER="0"></a><!--mstheme--></font></body></html>
